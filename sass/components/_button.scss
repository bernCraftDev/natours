.btn {
    &,
    &:link,
    /* example of psuedo-class, styling an element under a special condition */
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all 0.2s;
        position: relative;
        font-size: $default-font-size;

        // Change for the <button> element
        border: none;
        cursor: pointer;
    }

    &:hover {
        transform: translateY(-3px);
        /* up is negative value, down is positive */
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
        /* X Y blur rgba */

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
            /* sets something to invisible after the animation is done */
        }
    }

    &:active,
    &:focus {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }

    &::after {
        content: "";
        /* must specify content property, even if it's empty */
        display: inline-block;
        /* same with display */
        height: 100%;
        /* because psuedo-element, like a child element, 100% is of the button itself */
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        /* reference should be button, as top/left are in reference to whatever relative element it finds first */
        z-index: -1;
        /* defines positioning of stacked elements - -1 means this element is "behind" its relative */
        transition: all .4s;
    }

    &--white::after {
        background-color: $color-white;
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        /* name duration timing-function delay */
        animation-fill-mode: backwards;
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: 1.6rem;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
        transition: all .2s;
    }

    &:active {
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(0);
    }
}